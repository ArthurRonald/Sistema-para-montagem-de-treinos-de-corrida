# import streamlit as st
# import pandas as pd
# from sklearn.preprocessing import LabelEncoder

# st.title("Confira o treino ideal para o n√≠vel da atividade desejada")

# previsao = st.session_state.get("previsao")
# historico_lesao = st.session_state.get(
#     "dados_usuario", {}).get("lesao_encoded")

# if previsao == 0:
#     previsao = "Avan√ßado"
# elif previsao == 1:
#     previsao = "Iniciante"
# else:
#     previsao = "Intermedi√°rio"

# if previsao is None or historico_lesao is None:
#     st.error(
#         "‚ùå Dados do usu√°rio n√£o encontrados. Por favor, preencha o question√°rio primeiro.")
# else:
#     st.subheader(
#         f"O n√≠vel adequado para sua atividade √© {str(previsao).upper()}")

#     if previsao == "Avan√ßado" and historico_lesao == "N√£o":
#         treino = pd.read_csv("AVAN√áADO SEM LES√ÉO.csv")
#         st.write(treino)
#     elif previsao == "Avan√ßado" and historico_lesao == "Sim":
#         treino = pd.read_csv("AVAN√áADO COM LES√ÉO.csv")
#         st.write(treino)

#     elif previsao == "Intermediario" and historico_lesao == "N√£o":
#         treino = pd.read_csv("INTERMEDI√ÅRIO SEM LES√ÉO.csv")
#         st.write(treino)

#     elif previsao == "Intermediario" and historico_lesao == "Sim":
#         treino = pd.read_csv("INTERMEDI√ÅRIO COM LES√ÉO.csv")
#         st.write(treino)

#     elif previsao == "Iniciante" and historico_lesao == "N√£o":
#         treino = pd.read_csv("INICIANTE SEM LES√ÉO.csv")
#         st.write(treino)

#     elif previsao == "Iniciante" and historico_lesao == "Sim":
#         treino = pd.read_csv("INICIANTE COM LES√ÉO.csv")
#         st.write(treino)

# st.button("Recomenda√ß√£o Inteligente")

import streamlit as st
import pandas as pd
from sklearn.preprocessing import LabelEncoder

st.title("Confira o treino ideal para o n√≠vel da atividade desejada")

# Obter dados da sess√£o
previsao = st.session_state.get("previsao")
historico_lesao = st.session_state.get(
    "dados_usuario", {}).get("lesao_encoded")

# Mapear previs√£o para texto
if previsao == 0:
    previsao = "Avan√ßado"
elif previsao == 1:
    previsao = "Iniciante"
else:
    previsao = "Intermedi√°rio"

if previsao is None or historico_lesao is None:
    st.error(
        "‚ùå Dados do usu√°rio n√£o encontrados. Por favor, preencha o question√°rio primeiro.")
else:
    st.subheader(
        f"O n√≠vel adequado para sua atividade √© {str(previsao).upper()}")

    # Definir o nome do arquivo baseado nas condi√ß√µes
    arquivo = None

    if previsao == "Avan√ßado" and historico_lesao == "N√£o":
        arquivo = "AVAN√áADO SEM LES√ÉO.csv"
    elif previsao == "Avan√ßado" and historico_lesao == "Sim":
        arquivo = "AVAN√áADO COM LES√ÉO.csv"
    elif previsao == "Intermedi√°rio" and historico_lesao == "N√£o":
        arquivo = "INTERMEDI√ÅRIO SEM LES√ÉO.csv"
    elif previsao == "Intermedi√°rio" and historico_lesao == "Sim":
        arquivo = "INTERMEDI√ÅRIO COM LES√ÉO.csv"
    elif previsao == "Iniciante" and historico_lesao == "N√£o":
        arquivo = "INICIANTE SEM LES√ÉO.csv"
    elif previsao == "Iniciante" and historico_lesao == "Sim":
        arquivo = "INICIANTE COM LES√ÉO.csv"

    if arquivo:
        try:
            # Carregar o DataFrame
            treino = pd.read_csv(arquivo)

            # Exibir o DataFrame de forma mais bonita
            st.write("### Plano de Treino Recomendado")
            # Ou use st.table(treino) para uma tabela est√°tica
            st.dataframe(treino, hide_index=True)

            # Opcional: Mostrar como expandir para ver todos os dados
            st.info("üîç Role para ver todos os exerc√≠cios recomendados.")

        except FileNotFoundError:
            st.error(
                f"Arquivo {arquivo} n√£o encontrado. Verifique o caminho do arquivo.")
        except Exception as e:
            st.error(f"Erro ao carregar o arquivo: {e}")
    else:
        st.warning("Combina√ß√£o de n√≠vel e hist√≥rico de les√£o n√£o reconhecida.")

    st.button("Recomenda√ß√£o Inteligente")
